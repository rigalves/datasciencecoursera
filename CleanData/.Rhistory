s <- split(airquality, airquality$Month)
s
s <- split(airquality, airquality$Month)
s
fnx <- function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")])
fnx2 <- function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = T)
lapply(s, fnx)
x <- rnorm(10)
x
f1 <- gl(2, 5)
f2 <- gl(5, 2)
f1
f2
x <- rnorm(10)
x
f1 <- gl(2, 5)
f2 <- gl(5, 2)
f1
f2
interaction(f1, f2)
split(x, list(f1, f2))
library(datasets)
data(iris)
library(datasets)
data(iris)
library(datasets)
data(iris)
?iris
iris
s <- split(iris, iris$Species); s
s <- lapply(s, mean)
s <- s(s, mean)
s <- split(iris, iris$Species);
s <- s(s, mean)
s <- split(iris, iris$Species);
sapply(s, mean)
s <- split(iris, iris$Species);
lapply(s, mean)
s <- split(iris, iris$Species);
lapply(s, function(x) colMeans(x[, "Sepal.Length"]))
?colMeans
s <- split(iris, iris$Species);
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
colMeans(iris)
s <- split(iris, iris$Species);
lapply(s, function(x) mean(x[, "Sepal.Length"]))
s <- split(iris, iris$Species);s
lapply(s, function(x) mean(x[, "Sepal.Length"]))
library(datasets)
data(iris)
s <- split(iris, iris$Species);s
lapply(s, function(x) mean(x[, "Sepal.Length"]))
round(6.588)
lapply(s, function(x) mean(x[, "Sepal.Length"]))["virginica"]
sapply(s, function(x) mean(x[, "Sepal.Length"]))["virginica"]
round(sapply(s, function(x) mean(x[, "Sepal.Length"]))["virginica"])
iris
head(iris)
apply(iris[, 1:4], 2, mean)
colMeans(iris)
head(iris)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
apply(mtcars, 2, mean)
apply(mtcars, 1, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars$mpg
mtcars$cyl
mean(mtcars$mpg, mtcars$cyl)
0
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean) #YES
with(mtcars, tapply(mpg, cyl, mean))
?with
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
mtcars$mpg
mtcars$cyl
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean)) #YES
tapply(mtcars$mpg, mtcars$cyl, mean) #YES
split(mtcars, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
x[c(1,3)]
x <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(x[1] - x[3])
x <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(x[3] - x[1])
x <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(x[1] - x[3])
x <- tapply(mtcars$hp, mtcars$cyl, mean)
round(abs(x[3] - x[1]))
abs(x[3] - x[1])
x <- tapply(mtcars$hp, mtcars$cyl, mean)
round(abs(x[3] - x[1]))
debug(ls)
ls
debug(ls)
ls()
debug(ls)
ls()
rm(list = ls*())
rm(list = ls())
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_151') # for 64-bit version
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_151') # for 64-bit version
library(xlsx)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
library(XML)
fileUrl <- "https://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
library(XML)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(root)
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
doc
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
doc
rootNode <- xmlRoot(doc)
rootNode
xmlName(rootNode)
names(rootNode)
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
doc
rootNode <- xmlRoot(doc)
rootNode
xmlName(rootNode)
names(rootNode)
rootNode[1]
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
doc
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[1]
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
doc
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
doc
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]][[1]]
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
doc
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = T)
doc
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "/node", xmlValue)
doc
xpathSApply(rootNode, "/note", xmlValue)
xpathSApply(rootNode, "//note", xmlValue)
xpathSApply(rootNode, "//to", xmlValue)
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//to", xmlValue)
xpathSApply(rootNode, "//from", xmlValue)
xpathSApply(rootNode, "//to", xmlValue)
xpathSApply(rootNode, "//from", xmlValue)
install.packages(jsonlite)
install.packages("jsonlite")
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/rigalves/repos")
jsonData
names(jsonData)
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/rigalves/repos")
class(jsonData)
names(jsonData)
jsonData
names(jsonData$owner)
jsonData$owner
myjson <- toJSON(iris, pretty = T)
myjson
myjson <- toJSON(iris, pretty = T)
myjson
iris2 <- fromJSON(myjson)
head(iris2)
library(data.table)
install.packages("data.table")
library(data.table)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/restaurants.csv",method="curl")
restData <- read.csv("./data/restaurants.csv")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/restaurants.csv")
restData <- read.csv("./data/restaurants.csv")
s1 <- seq(1,10,by=2) ; s1
s2 <- seq(1,10,length=3); s2
x <- c(1,3,8,25,100); seq(along = x)
x
s1 <- seq(1,10,by=2) ; s1
s2 <- seq(1,10,length=3); s2
x <- c(1,3,8,25,100); x; seq(along = x)
restData$nearMe = restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearMe)
restData
table(restData$nearMe)
restData$zipWrong = ifelse(restData$zipCode < 0, TRUE, FALSE)
table(restData$zipWrong,restData$zipCode < 0)
restData
restData$zipGroups = cut(restData$zipCode,breaks=quantile(restData$zipCode))
table(restData$zipGroups)
restData
table(restData$zipGroups,restData$zipCode)
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode,g=4)
table(restData$zipGroups)
install.packages("Hmisc")
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode,g=4)
table(restData$zipGroups)
version
setwd("C:/Users/rigal/Amazon Drive/DBRigo/datasciencecoursera/CleanData")
library(dplyr)
chicago <- readRDS("chicago.rds")
dim(chicago)
head(select(chicago, 1:5))
names(chicago)[1:3]
head(select(chicago, city:dptp))
head(select(chicago, -(city:dptp)))
i <- match("city", names(chicago))
j <- match("dptp", names(chicago))
head(chicago[, -(i:j)])
chic.f <- filter(chicago, pm25tmean2 > 30)
head(select(chic.f, 1:3, pm25tmean2), 10)
chic.f <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
head(select(chic.f, 1:3, pm25tmean2, tmpd), 10)
chicago <- arrange(chicago, date)
head(select(chicago, date, pm25tmean2), 3)
tail(select(chicago, date, pm25tmean2), 3)
chicago <- arrange(chicago, desc(date))
head(select(chicago, date, pm25tmean2), 3)
tail(select(chicago, date, pm25tmean2), 3)
head(chicago[, 1:5], 3)
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
head(chicago[, 1:5], 3)
chicago <- mutate(chicago,
pm25detrend=pm25-mean(pm25, na.rm=TRUE))
head(select(chicago, pm25, pm25detrend))
chicago <- mutate(chicago,
tempcat = factor(1 * (tmpd > 80),
labels = c("cold", "hot")))
hotcold <- group_by(chicago, tempcat)
summarize(hotcold, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2),
no2 = median(no2tmean2))
chicago <- mutate(chicago,
year = as.POSIXlt(date)$year + 1900)
years <- group_by(chicago, year)
summarize(years, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>%
summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
?mutate
?group_by
mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month)
mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month)
library(dplyr)
mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month)
library(dplyr)
chicago <- readRDS("chicago.rds")
dim(chicago)
head(select(chicago, 1:5))
names(chicago)[1:3]
head(select(chicago, city:dptp))
head(select(chicago, -(city:dptp)))
i <- match("city", names(chicago))
j <- match("dptp", names(chicago))
head(chicago[, -(i:j)])
chic.f <- filter(chicago, pm25tmean2 > 30)
head(select(chic.f, 1:3, pm25tmean2), 10)
chic.f <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
head(select(chic.f, 1:3, pm25tmean2, tmpd), 10)
chicago <- arrange(chicago, date)
head(select(chicago, date, pm25tmean2), 3)
tail(select(chicago, date, pm25tmean2), 3)
chicago <- arrange(chicago, desc(date))
head(select(chicago, date, pm25tmean2), 3)
tail(select(chicago, date, pm25tmean2), 3)
head(chicago[, 1:5], 3)
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
head(chicago[, 1:5], 3)
chicago <- mutate(chicago,
pm25detrend=pm25-mean(pm25, na.rm=TRUE))
head(select(chicago, pm25, pm25detrend))
chicago <- mutate(chicago,
tempcat = factor(1 * (tmpd > 80),
labels = c("cold", "hot")))
hotcold <- group_by(chicago, tempcat)
summarize(hotcold, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2),
no2 = median(no2tmean2))
chicago <- mutate(chicago,
year = as.POSIXlt(date)$year + 1900)
years <- group_by(chicago, year)
summarize(years, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>%
summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
%>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month)
mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month)
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month)
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide1
library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
head(carMelt,n=3)
tail(carMelt,n=3)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable,mean)
cylData
head(InsectSprays)
tapply(InsectSprays$count,InsectSprays$spray,sum)
spIns =  split(InsectSprays$count,InsectSprays$spray)
spIns
sprCount = lapply(spIns,sum)
sprCount
unlist(sprCount)
sapply(spIns,sum)
library(plyr)
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
spraySums <- ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum))
dim(spraySums)
head(spraySums)
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide1
wide3 <- tidied <- dcast(narrow, gear + vs ~ cyl, max)
wide3
notverywide <- aggregate(mpg ~ gear + vs + cyl, data = narrow, max)
notverywide
untidy <- with(narrow, tapply(mpg, list(cyl, vs, gear), max))
untidy
notverywide
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
head(carMelt,n=3)
tail(carMelt,n=3)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable,mean)
cylData
head(InsectSprays)
tapply(InsectSprays$count,InsectSprays$spray,sum)
spIns =  split(InsectSprays$count,InsectSprays$spray)
spIns
sprCount = lapply(spIns,sum)
sprCount
unlist(sprCount)
sapply(spIns,sum)
library(plyr)
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
spraySums <- ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum))
dim(spraySums)
head(spraySums)
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>%
summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>%
summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
rm(list = ls())
